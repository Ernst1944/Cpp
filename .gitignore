# Prerequisites
*.d

# Compiled Object files
*.slo
*.lo
*.o
*.obj

# Precompiled Headers
*.gch
*.pch

# Compiled Dynamic libraries
*.so
*.dylib
*.dll

# Fortran module files
*.mod
*.smod

# Compiled Static libraries
*.lai
*.la
*.a
*.lib

# Executables
*.exe
*.out
*.app


Unit 4 Exercises

U4-3
E1
#include<iostream>
#include<string>
using namespace std;
const string Hstr="Hello," ;
string Hello(string my_name){
        return "Hello, " + my_name + ".\n";
}
 
int main(){
        string name;
        cout << "please input your name:" << endl;
        getline(cin, name);
        cout << Hello(name);
}

E2
#include<iostream>
#include<cmath>
using namespace std;
float multiplies(float a, float b, float c){
	float total=a*b*c;
	return total;
}
int main(){
	cout<<multiplies(3.3, 4.4, 5.5);
	return 0;
}
E3
#include<iostream>
#include<cmath>
using namespace std;
double my_sqrt(int a){
	double root = sqrt(a);
	return root;
}
int main(){
	cout<<my_sqrt(16);
	return 0;
}
E4
int age(int cy, int by){
	int age_x = cy-by;
	return age_x;
}
int main(){
	int cy;
	int by;
	cout<<"Enter current year:";
	cin>>cy;
	cout<<"Enter your birth year:";
	cin>>by;
	cout<<age(cy, by);
	return 0;
}
E5
#include<iostream>
#include<cmath>
using namespace std;
const int fingers_per_person=10;
int total_fingers(int people){
	int total=fingers_per_person*people;
	return total;
}
int main(){
	cout<<total_fingers(20);
	return 0;
}

U4M4
E1
#include<iostream>
#include<cmath>
using namespace std;
float cube_volume(float edge_length){
	float volume=pow(edge_length,3);
	return volume;
}
int main(){
	cout<<cube_volume(3.0);
	return 0;
}
E2
#include<iostream>
#include<cmath>
using namespace std;
float cube_root(float cube_volume){
	float root=pow(cube_volume,(1/3.0));
	return root;
}
int main(){
	cout<<cube_root(27.0);
	return 0;
}
E3
#include<iostream>
#include<cmath>
using namespace std;
double fx(float x,float y){
	double f_x=((7*x+8*y)/(2*y));
	return f_x;
}
int main(){
	cout<<fx(2,2);
	return 0;
}
E4
#include<iostream>
#include<cmath>
using namespace std;
const int FIVE=5;
const int TEN=10;
const int TWENTY=20;
double bills_calculator(int five_bills, int ten_bills, int twenty_bills){
	double total=five_bills*FIVE+ten_bills*TEN+twenty_bills*TWENTY;
	return total;
}
int main(){
	cout<<bills_calculator(3,5,0);
	return 0;
}
E5
#define _USE_MATH_DEFINES
#include<iostream>
#include<math.h>
#include<cmath>

using namespace std;
double circle_area(float r){
	double area=M_PI*pow(r,2);
	return area;
}
int main(){
	float small=5.0;
	float big=6.0;
	double difference=circle_area(big)-circle_area(small);
	cout<<difference;
	return 0;
}




U4M7
E1
#include<iostream>
using namespace std;
const float mb=1.0;//the smallest unit in this group of functions//
const float gb=1024*mb;//the convertion of gb to mb//
const float pictures_data= 1.5*mb;//space of each photo//
float space_left(double user_fdspace, int picture_num){
	double occupied_space= picture_num*pictures_data;
	double flashd_space=(user_fdspace*gb-occupied_space)/gb;
	return flashd_space;
}
int main(){
	cout<<space_left(8, 100);
	return 0;
}
	
E2
#include<iostream>
#include<math.h>
#include<cmath>
using namespace std;
const float mb=1.0;//the smallest unit in this group of functions//
const float gb=1024*mb;//the convertion of gb to mb//
const float pictures_data= 1.5*mb;//space of each photo//
float space_left(double user_fdspace, int picture_num){
	double occupied_space= picture_num*pictures_data;
	double flashd_space=(user_fdspace*gb-occupied_space)/gb;
	return flashd_space;
}
int potential_pics(double user_fdspace, int picture_num){
	double potential=(space_left(user_fdspace,picture_num)*gb)/pictures_data;
	return potential;
}
int main(){
	cout<<floor(potential_pics(8, 100));
	return 0;
}


E3
#include<iostream>
#include<math.h>
#include<cmath>
using namespace std;
const int ap_from_one_tree=480;
const int g=1;
const int kg=1000*g;
const int apple_weight=151*g;
const float prize=3.80/kg;
float apple_profit(int apple_trees){
	float total=apple_trees*ap_from_one_tree*apple_weight*prize;
	return total;
}
int main(){
	cout.precision(6);
	cout<<apple_profit(1);
	return 0;
}



U4M8
E1
#define _USE_MATH_DEFINES
#include<iostream>
#include<math.h>
#include<cmath>
using namespace std;
double sphere_volume(double radius){
	double volume=M_PI*pow(radius,3)*4/3;
	return volume;
}
double hemisphere_volume(double radius){
	double volume=sphere_volume(radius)/2;
	return volume;
}
int main(){
	cout<<hemisphere_volume(1);
	return 0;
}
E2
#include<iostream>
#include<math.h>
#include<cmath>
using namespace std;
double ft_to_in(double ft){
	double in=ft*12;
	return in;
}
double rp_volume(double length, double width, double hight){
	double volume=length*width*hight;
	return volume;
}
int main(){
	double room_width=ft_to_in(49.2);
	double room_length=ft_to_in(20);
	double room_hight=ft_to_in(23);

	cout<<floor(rp_volume(room_hight,room_length,room_width)/rp_volume(8,12,10));
	return 0;
}
E3
#include<iostream>
#include<math.h>
#include<cmath>
using namespace std;
const int flushes=6;
const int dishwasher=19;
const int shower_water=7;
double total_liters(int toliet, int dishes, int shower){
	double total=toliet*flushes + dishes*dishwasher + shower*shower_water;
	return total;
}
int main(){
	cout<<total_liters(10, 2, 10);
	return 0;
}
